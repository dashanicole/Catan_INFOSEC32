import os
import base64
from getpass import getpass
from cryptography.fernet import Fernet
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives import hashes

# Generate a key from the password
def generate_key(password, salt):
    kdf = PBKDF2HMAC(
        algorithm=hashes.SHA256(),
        length=32,
        salt=salt,
        iterations=100000
    )
    key = base64.urlsafe_b64encode(kdf.derive(password.encode()))
    return Fernet(key)

# Encrypt the file in place
def encrypt_file(filename, password):
    salt = os.urandom(16)  # Generate a random salt
    fernet = generate_key(password, salt)

    with open(filename, 'rb') as f:
        data = f.read()

    encrypted = fernet.encrypt(data)

    # Overwrite the original file with salt + encrypted data
    with open(filename, 'wb') as f:
        f.write(salt + encrypted)

    print(f"File '{filename}' encrypted successfully.")

# Decrypt the file in place
def decrypt_file(filename, password):
    with open(filename, 'rb') as f:
        salt = f.read(16)  # Extract the salt
        encrypted_data = f.read()  # Get encrypted content

    fernet = generate_key(password, salt)

    try:
        decrypted = fernet.decrypt(encrypted_data)

        # Overwrite the original file with decrypted data
        with open(filename, 'wb') as f:
            f.write(decrypted)

        print(f"File '{filename}' decrypted successfully.")
    except:
        print("Decryption failed! Wrong password or corrupted file.")

# Main execution function
def main():
    action = input("Choose action (encrypt/decrypt): ").lower()
    filename = input("Enter filename: ")

    if action == "encrypt":
        password = getpass("Enter encryption password: ")
        encrypt_file(filename, password)
    elif action == "decrypt":
        password = getpass("Enter decryption password: ")
        decrypt_file(filename, password)
    else:
        print("Invalid action.")

if __name__ == "__main__":
    main()

#password of sample.txt = "123" 
#password of sample.jpg = "dasha"