from cryptography.fernet import Fernet

def generate_key():
    return Fernet.generate_key()

def encrypt_file(filename, key):
    fernet = Fernet(key)
    with open(filename, 'rb') as f:
        data = f.read()
    encrypted = fernet.encrypt(data)
    with open(filename + ".encrypted", 'wb') as f:
        f.write(encrypted)

def decrypt_file(filename, key):
    fernet = Fernet(key)
    with open(filename, 'rb') as f:
        data = f.read()
    decrypted = fernet.decrypt(data)
    with open(filename.replace(".encrypted", ".decrypted"), 'wb') as f:
        f.write(decrypted)

# Example usage (for a test file in a VM):
key = generate_key()
encrypt_file("test.txt", key)  # User must intentionally run this
decrypt_file("test.txt.encrypted", key)  # Reversible with the key